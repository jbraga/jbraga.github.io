openapi: 3.0.1
info:
  title: Worldnet API
  description: |
    # Introduction
    The Worldnet API enables you to connect seamlessly and securely to our [Omni-Channel Payments Platform](https://www.worldnetpayments.com/).

    Our API's are built around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) principles and [OpenAPI Specification](https://www.openapis.org/) definitions.
    Complying to such industry standards means that we can offer developers a much better experience by exposing predictable resource-oriented URL's as well as a comprehensive range of HTTP response codes and verbs.
    Moreover, you have the possibility to enable and take full advantage of [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) controls in order to provide out-of-the-box `Discoverability` and `Functional-Awareness` for your integrations.

    Get started on building full-featured payment applications and join us in the Revolution of Intelligent Retail.

    # Authentication
    The Worldnet API uses a combination of API Keys and [Java Web Tokens (JWT)](https://jwt.io/) to authenticate requests. 
    API Key's hold all the necessary information for issuing JWT access tokens which in turn are required to access protected resources and operations.
    Therefore, before you can start making any calls, you must generate an API Key and use it to obtain access tokens.

    Please, make yourself familiar with the following security schemes before proceeding:
    <!-- ReDoc-Inject: <security-definitions> -->
    ## Generating an API Key
    In order to generate your first API Key you must [sign up](#) for a developer account and follow the steps below:
    1. [Log into the SelfCare System](#) with the credentials you received in the welcome email.
    2. Under *Settings*, navigate to *API Keys*, and then click the `NEW API KEY` button.
    4. Enter an alias and set the permission modes for each Sub-API.
    5. Select the terminals that you want the API Key to be allowed to operate.
    6. Back on the list, choose the action `View Authentication Key` to be able to see your API Key.

    ## Obtaining an Access Token
    In order to obtain an access token you must use the [authenticate](#operation/authenticate) operation passing your API Key in the `HTTP Authorization` header with `Basic` authentication scheme.

    In the snippet bellow we show how to achieve that using [cURL](https://github.com/curl/curl). However, if you are not familiar with command line tools we recommend [Postman](https://www.getpostman.com/).

    ```
    curl https://devpayments.worldnettps.com/merchant/api/v1/account/authenticate \
      -H "Authorization: Basic <Merchant API Key>"
    ```

    For every successful request you should receive a response just like the one bellow containing the information associated with your crendentials, such as hours to expiry and privileges.
    Include the JWT Token from the `token` property in the `Authorization` header with `Bearer` authentication scheme for following requests in order to prove your identity and access protected resources.

    ```
    {
        "audience": "devpayments.worldnettps.com",
        "boundTo": "<Key Alias>",
        "tokenType": "Bearer",
        "token": "<JWT Token>",
        "issuedAt": "<Issue Date>",
        "expiresIn": "<Hours to Expiry>",
        "enableHypermedia": true,
        "roles": [

        ],
        "allowedTerminals": [

        ]
    }
    ```

    For security reasons, access tokens expire after a certain amount of time.
    Therefore, your application must implement a mechanism to keep track of `issuedAt` and `expiresIn` values in order to decide the right moment to automatically request new tokens.

    **Note:** Your application must not hard-code the lifespan of a token as the value of `expiresIn` property is subject to change without prior notice.

    ## Making Authenticated Calls
    Apart from the [authenticate](#operation/authenticate) operation, the entire API requires `Bearer` authentication scheme and expects a valid JWT token as proof of identity.
    The [cURL](https://github.com/curl/curl) snippet bellow is an example of how to use your access token, in this specific case, to request the list of available terminals in your account.

    ```
    curl https://devpayments.worldnettps.com/merchant/api/v1/account/terminals?pageSize=10 \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer <JWT Token>"
    ```

    **Note:** The API will issue a response with status `401 Unauthorized` for requests carrying an expired JWT.

    # API Requests
    We provide developers looking to integrate with our solutions with a full-featured **Sandbox**.

    - Sandbox URL: https://devpayments.worldnettps.com/merchant

    In order to perform actions on the API's resources you must combine your requests with the proper [HTTP Request Method](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods).

    The Worldnet API supports the following HTTP Methods which are sometimes referred as *HTTP Verbs*:

    HTTP Method  | Description
    ------------ | -------------
    [GET](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET) | It requests a representation of the specified resource. Requests using `GET` are ready-only.
    [POST](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) | It is used to submit an entity to the specified resource, often causing a change in state on the server.
    [PATCH](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH) | It is used to apply partial modifications to a resource.
    [DELETE](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE) | It deletes / cancels / reverts the specified resource.

    ## Request Identifiers
    The Worldnet API assigns a unique identifier for every request that comes in. You can find your requests' identifiers either in the `X-Request-Id` header or in the Error field `debugIdentifier`.

    Request ID's are part of an effort to speed troubleshooting by facilitating communication between clients and our support team.
    Since we keep track of all request identifiers in our log files, you just need to inform the request's identifier when asking us to assist you with problems that might come up during your integrations.

    ## Request Headers
    HTTP Header  | Description
    ------------ | -------------
    [Accept](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept) | The response format expected by your application.<br />The Worldnet API only produces `application/json` response format.
    [Accept-Language](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language) | It advertises which languages the client is able to understand, and which locale variant is preferred.<br />The Worldnet API fully supports English `en` and French `fr` languages.
    [Content-Type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type) | The body format of the request your application is sending to the API.<br />The Worldnet API only consumes `application/json` content type.
    [Authorization](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization) | It must contain contain the credentials (API Key or JWT Access Token) to authenticate your application.<br />The API will issue a `401 Unauthorized` response with the `WWW-Authenticate` header attached if your application fails to use this header properly.

    ## Partial Updates
    Partial update requests are signaled with the HTTP method `PATCH`.
    In order to perform partial updates, clients must specify only the properties that have changed.

    **Note:** To clear the content of a property, supply an empty value.

    ## Testing Requests
    Eventually it will be necessary to perform some transactions.
    For resources such as testing credit cards and simulated responses, see [Testing Resources](https://docs.worldnettps.com/doku.php?id=developer:integration_docs:testing-guide#testing_resources).

    # API Responses
    Client applications must be able to handle JSON body format as well as a range of [HTTP status codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status) when processing responses.
    Some resources might also include contextual hypermedia links. We strongly recommend that clients use these links in order to request more information or perform additional actions on a given resource.

    ## HTTP Status Codes
    The Worldnet API has adopted a comprehensive range of status codes where `2XX` statuses are returned for successful requests and `4XX` or `5XX` for failed requests.

    The full range of status codes supported by Worldnet:

    HTTP Status Code  | Description
    ----------------- | -------------
    [200 OK](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/200) | Indicates that the request has succeeded.
    [201 Created](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/201) | Indicates that the request has succeeded and has led to the creation of a resource.
    [204 No Content](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/204) | Indicates that the server successfully executed the method but returns no response body.<br />This status is sent especifically to respond to `DELETE` requests.
    [400 Bad Request](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400) | Indicates that the server cannot or will not process the request due to malformed request syntax or schema violation.
    [401 Unauthorized](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401) | Indicates that the request has not been applied because it lacks valid authentication credentials.<br />This status is sent with a `WWW-Authenticate` header that contains information on how to authorize correctly.
    [403 Forbidden](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/403) | Indicates that the server understood the request but refuses to authorize it due to the lack of permissions.<br />Re-authenticating will make no difference until the proper permissions and terminals are added to the API Key.
    [404 Not Found](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404) | Indicates that the server cannot find the requested resource.
    [405 Method Not Allowed](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405) | Indicates that the request method is known by the server but is not supported by the target resource.
    [406 Not Acceptable](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/406) | Indicates that the server cannot produce a response matching the value from `Accept` header.
    [415 Unsupported Media Type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/415) | Indicates that the server refuses to accept the request because the payload format described by the `Content-Type` is unsupported.
    [422 Unprocessable Entity](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/422) | Indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to proceed due to semantic errors or failed business validations.
    [500 Internal Server Error](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500) | Indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.
    [501 Not Implemented](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/501) | Indicates that the server does not yetsupport the functionality required to fulfill the request, but might in the future.

    ## Error Handling
    For all errors Worldnet returns an error response body that includes additional details in the format below:

    ```
    {
        "debugIdentifier": "ae6d75eb-381b-4a01-9f49-fdff12e3848b",
        "details": [
            {
                "errorCode": "X_400_002",
                "errorMessage": "Unable to deserialize value",
                "source": {
                    "location": "BODY",
                    "resource": "TipType",
                    "property": "type",
                    "value": "VARIABLE",
                    "expected": "Acceptable values: [PERCENTAGE, FIXED_AMOUNT]"
                }
            }
        ]
    }
    ```

    Error messages are intented to help developers to fix any problems that may come up during integration.<br />However, if you ever have a hard time troubleshooting an issue or even wish to make a suggestion, do not hesitate to [contact us](https://worldnettps.com/contact/).
    Do not forget to send us the `debugIdentifier` along with your inquiries.

    ## HATEOAS (Hypermedia Links)
    [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) is a powerful mechanism when it comes to enabling self-discoverability, reducing invalid state transition calls and protecting your application against unexpected changes on resources URL's.

    This snippet from a sample `payments` response shows the list of hypermedia controls that represent the operations available for the newly created payment resource.

    ```
    "links": [
        {
            "rel": "capture",
            "method": "PATCH"
            "href": "https://devpayments.worldnettps.com/merchant/api/v1/transaction/payments/GH2AERQEJS/capture"
        },
        {
            "rel": "refund",
            "method": "POST"
            "href": "https://devpayments.worldnettps.com/merchant/api/v1/transaction/payments/GH2AERQEJS/refunds"
        },
        {
            "rel": "update",
            "method": "PATCH"
            "href": "https://devpayments.worldnettps.com/merchant/api/v1/transaction/payments/GH2AERQEJS"
        },
        {
            "rel": "self",
            "method": "GET"
            "href": "https://devpayments.worldnettps.com/merchant/api/v1/transaction/payments/GH2AERQEJS"
        },
        {
            "rel": "reverse",
            "method": "DELETE"
            "href": "https://devpayments.worldnettps.com/merchant/api/v1/transaction/payments/GH2AERQEJS"
        }
    ]
    ```

    # Pagination
    Worldnet implements cursor-based pagination which is sometimes referred as continuation token pagination.
    This pagination approach works by returning a pointer to a specific item in the dataset. On subsequent requests, the server returns results after the given pointer.

    Clients don't need to worry about implementing complex pagination mechanism in their applications as Worldnet returns the total count and a hypermedia link that can be used to load more result for all paginated resources.
    ```
    "links": [
        {
            "rel": "next",
            "method": "GET"
            "href": "https://devpayments.worldnettps.com/merchant/api/v1/account/terminals?next=CWY4XRGUUY"
        }
    ],
    "totalCount": 2
    ```

    The default and maximum number of elements per page is `100`, but it can be changed by adding the query parameter `pageSize` to requests as follows:
    ```
    curl https://devpayments.worldnettps.com/merchant/api/v1/account/terminals?pageSize=5 \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer <JWT Token>"
    ```

    **Note:** For performance reasons, the elements inside of a paginated list only represent a compact version of the resource listed.
    In order to retrieve the full version of a given resource, client applications must make a subsequent request using the proper hypermedia link.

    # Versioning
    Versioning ensures that changes are backward compatible. The Worldnet API uses a major and minor version nomenclature to manage changes.

    ## Major Versions
    Major version numbers will reflect in the REST URL, for example `/api/v1/transaction/payments`.

    Currently, **v1** is the only supported major version.
    
    ## Minor Versions
    Minor and backward-compatible changes will be advertised via `X-API-Version` response header, for example `X-API-Version: 2020-01-01`.

    Developers should use this header to keep track of new features and optimisations that might benefit their applications.
  contact:
    name: Support Team
    url: https://worldnettps.com/contact/
    email: support@worldnettps.com
  version: v1
  x-logo:
    url: worldnet-logo.png
    backgroundColor: '#FFFFFF'
    altText: Worldnet
servers:
- url: //devpayments.worldnettps.com/merchant
  description: Sandbox Server
tags:
- name: tokens
  description: TODO
  x-displayName: Access Tokens
- name: settings
  description: TODO
  x-displayName: Settings
- name: balances
  description: TODO
  x-displayName: Balances
- name: credentials
  description: TODO
  x-displayName: Secure Credentials
- name: payments
  description: TODO
  x-displayName: Payments
- name: refunds
  description: TODO
  x-displayName: Refunds
- name: transactions
  description: TODO
  x-displayName: Transactions
paths:
  /api/v1/account/authenticate:
    get:
      tags:
      - tokens
      summary: Authenticate
      description: Use this operation to exchange your `API Key` for a `JWT Token`
        that will give you access to the API.
      operationId: authenticate
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
        example: Basic <Merchant API Key>
      responses:
        200:
          description: JWT Access Token has been issued successfully
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        401:
          description: Authentication failed, the API Key has either been revoked
            or not found
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Authorization failed, the requester's host is not allowed to
            use the API Key
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic: []
  /api/v1/account/terminals:
    get:
      tags:
      - settings
      summary: List Terminals
      description: Returns a paginated list of basic information about the terminals
        assigned to the access token via API Key. Use the `load` hypermedia link to
        retrieve the full configuration of a terminal.
      operationId: listTerminals
      parameters:
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        200:
          description: OK
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalPaginatedResult'
        4XX:
          description: Client Error
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Server Error
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer:
        - account-api:full-access
        - account-api:ready-only
      x-position: "0"
  /api/v1/account/terminals/{terminalNumber}:
    get:
      tags:
      - settings
      summary: Load Terminal
      description: Loads the full details about the terminal's configuration. Supply
        the number of one of the terminals returned by the list operation.
      operationId: loadTerminal
      parameters:
      - name: terminalNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terminal'
        4XX:
          description: Client Error
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Server Error
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer:
        - account-api:full-access
        - account-api:ready-only
      x-position: "1"
    patch:
      tags:
      - settings
      summary: Update Terminal
      description: Partially updates the configuration of a terminal. Currently, it
        is only possible to update tips and taxes.
      operationId: updateTerminal
      parameters:
      - name: terminalNumber
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTerminalRequest'
        required: true
      responses:
        200:
          description: OK
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terminal'
        4XX:
          description: Client Error
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Server Error
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer:
        - account-api:full-access
      x-position: "2"
  /api/v1/account/terminals/{terminalNumber}/endOfDay:
    patch:
      tags:
      - settings
      summary: End Of Day
      description: For terminals in manual settle mode, this operation must be used
        to indicate the end-of-day closing so that clearing and settlement processes
        can take place.
      operationId: endOfDay
      parameters:
      - name: terminalNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terminal'
        4XX:
          description: Client Error
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Server Error
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer:
        - account-api:full-access
      x-position: "3"
  /api/v1/account/terminals/{terminalNumber}/devices:
    get:
      tags:
      - settings
      summary: List POS Device Types
      description: Returns a paginated list of basic information about the POS device
        types supported by the terminal. Use the `load` hypermedia link to retrieve
        the complete information about a POS device type.
      operationId: listDeviceTypes
      parameters:
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 100
      - name: terminalNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicePaginatedResult'
        4XX:
          description: Client Error
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Server Error
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer:
        - account-api:full-access
        - account-api:ready-only
      x-position: "4"
  /api/v1/account/terminals/{terminalNumber}/devices/{type}:
    get:
      tags:
      - settings
      summary: Load POS Device Type
      description: Loads the full details about the device's configuration. Supply
        the type of one of the devices returned by the list operation.
      operationId: loadDeviceTypes
      parameters:
      - name: terminalNumber
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
        4XX:
          description: Client Error
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Server Error
          headers:
            X-Request-Id:
              description: Unique identifier assigned by Worldnet for each request.
              style: simple
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer:
        - account-api:full-access
        - account-api:ready-only
      x-position: "5"
components:
  schemas:
    AccessToken:
      required:
      - audience
      - boundTo
      - enableHypermedia
      - expiresIn
      - issuedAt
      - token
      - tokenType
      type: object
      properties:
        audience:
          type: string
          description: The intended audience for the token
          example: devpayments.worldnettps.com
        boundTo:
          type: string
          description: Alias of the Merchant API Key to which the access token is
            bound
        tokenType:
          type: string
          description: Authentication scheme
          example: Bearer
        token:
          type: string
          description: JWT Access Token
        issuedAt:
          type: string
          description: Exact date and time that the token has been issued
          format: date-time
        expiresIn:
          type: integer
          description: Number of hours after which the token will be expired
          format: int32
        enableHypermedia:
          type: boolean
          description: Indicates whether the response should contains hypermedia links
        roles:
          uniqueItems: true
          type: array
          description: Set of roles with which the token was granted
          example: transaction-api:ready-only
          items:
            type: string
            description: Set of roles with which the token was granted
            example: transaction-api:ready-only
        allowedTerminals:
          uniqueItems: true
          type: array
          description: Set of terminal numbers with which the token is allowed to
            operate
          items:
            type: string
            description: Set of terminal numbers with which the token is allowed to
              operate
    Error:
      required:
      - debugIdentifier
      - details
      type: object
      properties:
        debugIdentifier:
          type: string
          description: Clients should use this field when communicating to our support
            team.It allows us to easily identify the request and consequently the
            reason behind its failure.
        details:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    ErrorDetail:
      required:
      - errorCode
      - errorMessage
      type: object
      properties:
        errorCode:
          type: string
          description: A code assigned by Worldnet to each type of failure.
        errorMessage:
          type: string
          description: A brief description of the given error.
        about:
          type: string
          description: A link to an external documentation that fully explains the
            issue.
          format: uri
        source:
          $ref: '#/components/schemas/ErrorSource'
    ErrorSource:
      required:
      - location
      type: object
      properties:
        location:
          type: string
          description: The HTTP message element that contains the invalid value.
          enum:
          - HEADER
          - BODY
          - PATH
          - QUERY
        resource:
          type: string
          description: For errors in the request body, this field points to the object
            that contains the invalid property.
        property:
          type: string
          description: The field or parameter that carries the invalid value.
        value:
          type: object
          description: Invalid value sent by the client.
        expected:
          type: object
          description: Here the server gives a hint of how the client should fix the
            issue.
    HypermediaLink:
      type: object
      properties:
        rel:
          type: string
          description: Keyword that represents the action that the link is supposed
            to perform.
        method:
          type: string
          description: The HTTP method or verb.
          example: POST
        href:
          type: string
          description: The actual request URL.
    TerminalCompact:
      required:
      - paymentProcessor
      - terminalNumber
      type: object
      properties:
        terminalNumber:
          maxLength: 50
          minLength: 1
          type: string
          description: Unique number assigned by Worldnet.
        paymentProcessor:
          maxLength: 128
          minLength: 1
          type: string
          description: The financial entity that will process and authorise the operations
            performed by the terminal.
        displayName:
          maxLength: 24
          minLength: 0
          type: string
          description: Friendly name assigned by the merchant.
        links:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/HypermediaLink'
    TerminalPaginatedResult:
      required:
      - data
      - totalCount
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TerminalCompact'
        links:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/HypermediaLink'
        totalCount:
          type: integer
          format: int64
    Address:
      type: object
      properties:
        line1:
          maxLength: 50
          minLength: 0
          type: string
        line2:
          maxLength: 50
          minLength: 0
          type: string
        postalCode:
          maxLength: 50
          minLength: 0
          type: string
        city:
          maxLength: 128
          minLength: 0
          type: string
        region:
          maxLength: 128
          minLength: 0
          type: string
        country:
          maxLength: 2
          minLength: 2
          type: string
      description: Merchant's address. This information will appear on transaction
        receipts.
    AvsCheck:
      required:
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates whether AVS check is available for the terminal and
            merchants may send cardholder’s billing address for verification.
        compulsory:
          type: boolean
          description: If enabled, it ensures that a transaction will never be processed
            without billing address information.
        autoDeclineTransactionsOnAvsFailures:
          type: boolean
          description: Indicates that all AVS non-match will lead to a transaction
            decline. This is sometimes desirable as not all card issuers will decline
            a transaction that has failed an AVS check.
        preferredAddressMode:
          type: string
          description: |-
            This field defines a configuration for the execution and validation of AVS transactions.
            - Exact: At least the first line of the address as well as city and postal code are mandatory.
            - Postal: Only postal code is mandatory when filling up customer's billing address.
          enum:
          - EXACT
          - POSTAL
        avsApprovalCodes:
          type: array
          description: List of AVS result codes that are considered to be a match.
            The codes left out of this list will lead to a transaction decline when
            `autoDeclineTransactionsOnAvsFailures` is enabled.
          items:
            type: string
            description: List of AVS result codes that are considered to be a match.
              The codes left out of this list will lead to a transaction decline when
              `autoDeclineTransactionsOnAvsFailures` is enabled.
            enum:
            - Y
            - A
            - Z
            - N
            - U
            - R
            - G
            - S
            - F
            - W
            - X
    CardLevelLimit:
      required:
      - card
      - limits
      type: object
      properties:
        card:
          type: string
          description: The card brand to which the list of volume limits below will
            be applied.
        limits:
          type: array
          description: List of limits to be applied to transactions using the brand
            specified in the property `card`.
          items:
            $ref: '#/components/schemas/CardVolumeLimit'
      description: List of card-level volume limits.
    CardVolumeLimit:
      required:
      - limitScope
      - limitThreshold
      type: object
      properties:
        limitScope:
          type: string
          enum:
          - DAILY
          - MONTHLY
          - SINGLE_TRANSACTION
        limitThreshold:
          type: integer
          description: The maximum amount allowed within the period described in the
            `limitScope` attribute.
          format: int32
        withoutCvvOnly:
          type: boolean
          description: If enabled, the limit will only take transactions without CVV
            into account. This is specially useful for merchants who are looking for
            a way to add thresholds for transactions that may lead to chargebacks.<br
            />This filter only applies to limits within `SINGLE_TRANSACTION` scope.
        withoutAvsOnly:
          type: boolean
          description: If enabled, the limit will only take transactions without AVS
            into account. This is specially useful for merchants who are looking for
            a way to add thresholds for transactions that may lead to chargebacks.<br
            />This filter only applies to limits within `SINGLE_TRANSACTION` scope.
        currentValue:
          type: number
          description: The sum of all transactions performed with the `card` within
            the period described in the `limitScope` attribute.<br />At the end of
            each period, this value is reset.
      description: List of limits to be applied to transactions using the brand specified
        in the property `card`.
    CvvCheck:
      required:
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates whether CVV check is available for the terminal.
        autoDeclineTransactionsOnCvvFailures:
          type: boolean
          description: Indicates that all CVV codes listed in `cvvDeclineCodes` property
            will lead to a transaction decline.This is sometimes desirable as not
            all card issuers will decline a transaction that has failed a CVV check.
        cvvDeclineCodes:
          type: array
          description: List of CVV result codes that will lead to a transaction decline
            when `autoDeclineTransactionsOnCvvFailures` is enabled.
          items:
            type: string
            description: List of CVV result codes that will lead to a transaction
              decline when `autoDeclineTransactionsOnCvvFailures` is enabled.
            enum:
            - M
            - N
            - P
            - U
    MerchantDetails:
      required:
      - email
      - mcc
      - name
      - phone
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
          description: Merchant's DBA (Doing Business As). This information will appear
            on transaction receipts.
        mcc:
          maxLength: 4
          minLength: 4
          pattern: ^[0-9]*$
          type: string
          description: Merchant Category Code. It is a four-digit number listed in
            ISO 18245 for retail financial services. An MCC is used to classify a
            business by the types of goods or services it provides.
        phone:
          maxLength: 100
          minLength: 0
          type: string
          description: Merchant's phone number. This information will appear on transaction
            receipts.
        email:
          maxLength: 100
          minLength: 0
          type: string
          description: Merchant's email address. This information will appear on transaction
            receipts.
        website:
          maxLength: 100
          minLength: 0
          type: string
          description: Merchant's web page. This information will appear on transaction
            receipts.
        address:
          $ref: '#/components/schemas/Address'
        merchantVolumeLimits:
          type: array
          description: List of merchant-level volume limits.
          items:
            $ref: '#/components/schemas/MerchantLevelLimit'
      description: Basic information about the merchant.
    MerchantLevelLimit:
      required:
      - limitScope
      - limitThreshold
      type: object
      properties:
        limitScope:
          type: string
          enum:
          - DAILY
          - MONTHLY
          - SINGLE_TRANSACTION
        limitThreshold:
          type: integer
          description: The maximum amount allowed within the period described in the
            `limitScope` attribute.
          format: int32
        withoutCvvOnly:
          type: boolean
          description: If enabled, the limit will only take transactions without CVV
            into account. This is specially useful for merchants who are looking for
            a way to add thresholds for transactions that may lead to chargebacks.<br
            />This filter only applies to limits within `SINGLE_TRANSACTION` scope.
        withoutAvsOnly:
          type: boolean
          description: If enabled, the limit will only take transactions without AVS
            into account. This is specially useful for merchants who are looking for
            a way to add thresholds for transactions that may lead to chargebacks.<br
            />This filter only applies to limits within `SINGLE_TRANSACTION` scope.
      description: List of merchant-level volume limits.
    SecurityFraudSettings:
      required:
      - allowCardholderSignatureBypass
      - avsCheck
      - cvvCheck
      type: object
      properties:
        cvvCheck:
          $ref: '#/components/schemas/CvvCheck'
        avsCheck:
          $ref: '#/components/schemas/AvsCheck'
        allowCardholderSignatureBypass:
          type: boolean
          description: Indicates whether cardholder signature requirement should be
            relaxed.
      description: Terminal security and fraud detection configuration.
    Terminal:
      required:
      - merchantDetails
      - paymentProcessor
      - securityFraudSettings
      - terminalNumber
      - terminalSettings
      type: object
      properties:
        displayName:
          maxLength: 24
          minLength: 0
          type: string
          description: Friendly name assigned by the merchant.
        terminalNumber:
          maxLength: 50
          minLength: 1
          type: string
          description: Unique number assigned by Worldnet.
        paymentProcessor:
          maxLength: 128
          minLength: 0
          type: string
          description: The financial entity that will process and authorise the operations
            performed by the terminal.
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        terminalSettings:
          $ref: '#/components/schemas/TerminalSettings'
        securityFraudSettings:
          $ref: '#/components/schemas/SecurityFraudSettings'
        terminalTips:
          type: array
          description: List of pre-filled tips.
          items:
            $ref: '#/components/schemas/TerminalTip'
        terminalTaxes:
          type: array
          description: List of supported taxes.
          items:
            $ref: '#/components/schemas/TerminalTax'
        terminalCustomFields:
          type: array
          description: List of additional data fields that can be used when performing
            transactions or storing secure credentials.
          items:
            $ref: '#/components/schemas/TerminalCustomField'
        supportedCards:
          type: array
          description: List of card brands supported by the terminal.
          items:
            type: string
            description: List of card brands supported by the terminal.
        supportedCurrencies:
          type: array
          description: List of currencies supported by the terminal to multi-currency
            processing of any kind.
          items:
            type: string
            description: List of currencies supported by the terminal to multi-currency
              processing of any kind.
            enum:
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BOV
            - BRL
            - BSD
            - BTN
            - BWP
            - BYR
            - BZD
            - CAD
            - CDF
            - CHE
            - CHF
            - CHW
            - CLF
            - CLP
            - CNY
            - COP
            - COU
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - INR
            - IQD
            - IRR
            - ISK
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LTL
            - LVL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MXV
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SOS
            - SRD
            - SSP
            - STD
            - STN
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - USN
            - USS
            - UYI
            - UYU
            - UZS
            - VEF
            - VES
            - VND
            - VUV
            - WST
            - XAF
            - XCD
            - XOF
            - XPF
            - YER
            - ZAR
            - ZMW
            - ZWL
        supportedDeviceTypes:
          type: array
          description: List of POS device types supported by the terminal.
          items:
            type: string
            description: List of POS device types supported by the terminal.
        cardVolumeLimits:
          type: array
          description: List of card-level volume limits.
          items:
            $ref: '#/components/schemas/CardLevelLimit'
        terminalVolumeLimits:
          type: array
          description: List of terminal-level volume limits.
          items:
            $ref: '#/components/schemas/TerminalLevelLimit'
        links:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/HypermediaLink'
    TerminalCustomField:
      required:
      - displayName
      - displayOrder
      - mandatory
      - name
      - paymentPage
      - secureCredentialsOnly
      - subscription
      - type
      type: object
      properties:
        type:
          type: string
          description: The type of the data the custom field is configured to carry.
          enum:
          - STRING
          - NUMERIC
          - BOOLEAN
        name:
          type: string
          description: Custom field name assigned by the merchant.
        displayName:
          type: string
          description: Friendly name that should be used for receipts and pages.
        displayOrder:
          type: integer
          description: Position of the field in relation to other custom fields.
          format: int32
        paymentPage:
          type: boolean
          description: Indicates whether the custom field should be shown on Worldnet
            hosted pages.
        subscription:
          type: boolean
          description: Indicates whether the custom field should be considered for
            Subscriptions which is Worldnet payment plan / standing order mechanism.
        secureCredentialsOnly:
          type: boolean
          description: Indicates whether the custom field will **only** serve the
            purpose of adding additional information to secure cards or accounts.
        mandatory:
          type: boolean
          description: If enabled, it ensures that a transaction will never be processed
            without the custom field properly populated.
      description: List of additional data fields that can be used when performing
        transactions or storing secure credentials.
    TerminalLevelLimit:
      required:
      - limitScope
      - limitThreshold
      type: object
      properties:
        limitScope:
          type: string
          enum:
          - DAILY
          - MONTHLY
          - SINGLE_TRANSACTION
        limitThreshold:
          type: integer
          description: The maximum amount allowed within the period described in the
            `limitScope` attribute.
          format: int32
        withoutCvvOnly:
          type: boolean
          description: If enabled, the limit will only take transactions without CVV
            into account. This is specially useful for merchants who are looking for
            a way to add thresholds for transactions that may lead to chargebacks.<br
            />This filter only applies to limits within `SINGLE_TRANSACTION` scope.
        withoutAvsOnly:
          type: boolean
          description: If enabled, the limit will only take transactions without AVS
            into account. This is specially useful for merchants who are looking for
            a way to add thresholds for transactions that may lead to chargebacks.<br
            />This filter only applies to limits within `SINGLE_TRANSACTION` scope.
        currentValue:
          type: number
          description: The sum of all transactions performed by the terminal within
            the period described in the `limitScope` attribute.<br />At the end of
            each period, this value is reset.
      description: List of terminal-level volume limits.
    TerminalSettings:
      required:
      - allowDigitalWalletPayload
      - allowEdcc
      - allowEmcp
      - allowEmvPayload
      - allowKeyedPayload
      - allowMagStripePayload
      - allowMoto
      - allowMulticurrency
      - allowPartialRefund
      - allowPos
      - allowPreAuthorization
      - allowRecurring
      - allowSecureCredentials
      - allowUnreferencedRefund
      - allowWeb
      - automaticSettle
      - forceUniqueOrderId
      type: object
      properties:
        allowWeb:
          type: boolean
          description: Indicates whether the terminal is configured to process Internet-based
            transactions.
        allowPos:
          type: boolean
          description: Indicates whether the terminal is configured to process POS-based
            (Cardholder Present) transactions.
        allowMoto:
          type: boolean
          description: Indicates whether the terminal is configured to process Mail
            Order / Telephone Order transactions.
        allowEmcp:
          type: boolean
          description: Indicates whether the terminal supports eCommerce Multi-Currency
            Processing.
        allowEdcc:
          type: boolean
          description: Indicates whether the terminal supports eCommerce Dynamic Currency
            Conversion.
        allowMulticurrency:
          type: boolean
          description: Indicates whether the terminal supports multi-currency processing.
        allowRecurring:
          type: boolean
          description: Indicates whether the terminal allows recurring payments.
        allowPreAuthorization:
          type: boolean
          description: Indicates whether the terminal allows pre-authorizations.<br
            />This type of transactions need to be complemented with a capture operation
            which can be done for a partial as well as a full amount.
        allowPartialRefund:
          type: boolean
          description: Indicates whether the terminal allows partial refunds.
        allowUnreferencedRefund:
          type: boolean
          description: Indicates whether the terminal allows unreferenced refunds.<br
            />This type of refunds do not require a prior payment transaction to be
            referenced.
        allowDigitalWalletPayload:
          type: boolean
          description: Indicates whether the terminal is able to handle card payloads
            from digital wallet applications.<br />Worldnet supports Apple Pay and
            Google Pay digital wallets.
        allowEmvPayload:
          type: boolean
          description: Indicates whether the terminal is able to handle card payloads
            from EMV devices.
        allowKeyedPayload:
          type: boolean
          description: Indicates whether the terminal is able to handle manually keyed
            card details.
        allowMagStripePayload:
          type: boolean
          description: Indicates whether the terminal is able to handle card payloads
            from MSR devices.
        allowSecureCredentials:
          type: boolean
          description: Indicates whether the terminal supports secure credentials
            which is the Worldnet's tokenization mechanism for cards and accounts.
        forceUniqueOrderId:
          type: boolean
          description: Indicates whether the terminal accepts duplicate order identifiers.<br
            />An order is considered a duplicate when there is already another approved
            transaction sitting in the open batch with the same identifier.
        automaticSettle:
          type: boolean
          description: If enabled, the terminal's transactions will be automatically
            cleared and settled based on the cut-off time in `batchTime` property.
        batchTime:
          type: string
          description: Time that defines the end-of-day closing for the terminal.<br
            />When in manual mode, merchants must send a `endOfDay` request in order
            to indicate that transactions performed prior to that moment are eligible
            to be cleared in the next settlement run.
        timeZone:
          type: string
          description: Terminal's preferred time-zone.
      description: Terminal settings and capabilities.
    TerminalTax:
      required:
      - name
      - rate
      type: object
      properties:
        uniqueReference:
          maxLength: 10
          minLength: 10
          type: string
          description: Unique reference number assigned by Worldnet. This field must
            be used when trying to update an existing terminal's tax.
        name:
          type: string
          description: Tax Name.
        rate:
          maximum: 100
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: The ratio expressed as a percentage at which a transaction
            is taxed.
          format: double
      description: List of supported taxes.
    TerminalTip:
      required:
      - type
      type: object
      properties:
        uniqueReference:
          maxLength: 10
          minLength: 10
          type: string
          description: Unique reference number assigned by Worldnet. This field must
            be used when trying to update an existing terminal's tip.
        type:
          type: string
          enum:
          - PERCENTAGE
          - FIXED_AMOUNT
        currency:
          type: string
          description: Currency associated with the tip. This is specially useful
            for multi-currency terminals in order to provide a different set of tips
            for each supported currency.
          enum:
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BOV
          - BRL
          - BSD
          - BTN
          - BWP
          - BYR
          - BZD
          - CAD
          - CDF
          - CHE
          - CHF
          - CHW
          - CLF
          - CLP
          - CNY
          - COP
          - COU
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LVL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MRU
          - MUR
          - MVR
          - MWK
          - MXN
          - MXV
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - SSP
          - STD
          - STN
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - USN
          - USS
          - UYI
          - UYU
          - UZS
          - VEF
          - VES
          - VND
          - VUV
          - WST
          - XAF
          - XCD
          - XOF
          - XPF
          - YER
          - ZAR
          - ZMW
          - ZWL
        amount:
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: This field must used when the tip is of type `FIXED_AMOUNT`.
            Otherwise, refer to the `percentage` property instead.
        percentage:
          maximum: 100
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: This field must used when the tip is of type `PERCENTAGE`.
            Otherwise, refer to the `amount` property instead.
          format: double
      description: List of pre-filled tips.
    UpdateTerminalRequest:
      type: object
      properties:
        tips:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TerminalTip'
        taxes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TerminalTax'
    DeviceType:
      required:
      - type
      type: object
      properties:
        type:
          maxLength: 30
          minLength: 1
          type: string
          description: Type of device.
        manufacturer:
          maxLength: 24
          minLength: 0
          type: string
          description: Company responsible for manufacturing the devices of this type.
        supportsMagStripe:
          type: boolean
          description: Indicates whether this type of device is capable of performing
            card swipes.
        supportsIcc:
          type: boolean
          description: Indicates whether this type of device is capable of reading
            card chips.
        supportsKeyed:
          type: boolean
          description: Indicates whether this type of device is capable of accepting
            keyed inputs.
        supportsContactless:
          type: boolean
          description: Indicates whether this type of device is capable of performing
            contactless transactions.
        supportsPinEntry:
          type: boolean
          description: Indicates whether this type of device is capable of accepting
            PIN entry.
        supportsOutputPrinting:
          type: boolean
          description: Indicates whether this type of device is capable of printing.
        supportsOutputDisplaying:
          type: boolean
          description: Indicates whether this type of device is capable of displaying
            information.
        applications:
          type: array
          items:
            $ref: '#/components/schemas/EmvApplication'
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/EmvCertificate'
        revokedCertificates:
          type: array
          items:
            $ref: '#/components/schemas/EmvCertificate'
        defaultEmvTags:
          type: array
          items:
            $ref: '#/components/schemas/EmvTag'
    EmvApplication:
      type: object
      properties:
        identifier:
          type: string
        version:
          type: string
        card:
          type: string
        matchType:
          type: string
          enum:
          - FULL
          - PARTIAL_VISA
          - PARTIAL_EUROPAY
    EmvCertificate:
      type: object
      properties:
        rid:
          type: string
        exponent:
          type: string
        certificate:
          type: string
    EmvTag:
      required:
      - hex
      - value
      type: object
      properties:
        decimal:
          type: integer
          format: int32
        description:
          type: string
        hex:
          type: string
        value:
          type: string
    DevicePaginatedResult:
      required:
      - data
      - totalCount
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DeviceTypeCompact'
        links:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/HypermediaLink'
        totalCount:
          type: integer
          format: int64
    DeviceTypeCompact:
      required:
      - type
      type: object
      properties:
        type:
          maxLength: 30
          minLength: 1
          type: string
          description: Type of device.
        manufacturer:
          maxLength: 24
          minLength: 0
          type: string
          description: Company responsible for manufacturing the devices of this type.
        links:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/HypermediaLink'
  securitySchemes:
    Basic:
      type: http
      description: |
        Use `Basic` authentication scheme to exchange your API Key for JWT Access Tokens.
      scheme: basic
    Bearer:
      type: http
      description: |
        Use `Bearer` authentication scheme to prove your identity in order to access protected resources.
      scheme: bearer
      bearerFormat: JWT
x-tagGroups:
- name: ACCOUNT API
  tags:
  - tokens
  - settings
- name: CUSTOMER API
  tags:
  - balances
  - credentials
- name: TRANSACTION API
  tags:
  - payments
  - refunds
  - transactions
